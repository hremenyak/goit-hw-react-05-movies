{"version":3,"file":"static/js/194.3b19ff33.chunk.js","mappings":"qRAGaA,EAAOC,EAAAA,GAAAA,GAAH,2CAIJC,EAAWD,EAAAA,GAAAA,GAAH,6EAKRE,GAAoBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8H,SCgB9B,EAxBkB,SAAC,GAA2B,IAAzBI,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,GACC,sCAEA,SAACN,EAAD,UACGK,EAASI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACZ,SAACV,EAAD,WACE,SAACC,EAAD,CACEU,GAAE,iBAAYH,GACdI,MAAO,CAAEC,KAAMR,EAASS,UAF1B,SAIGL,GAASC,KALCF,EADH,OAcvB,E,UCKD,EA3Ba,WACX,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGeG,EAAAA,EAAAA,MAHf,OAGRN,EAHQ,OAIdC,EAAkBD,GAJJ,gDAMdO,QAAQC,IAAR,MANc,yBAQdL,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,6BACE,4CACA,SAAC,EAAD,CAAWlB,SAAUa,EAAgBZ,QAASc,MAGnD,C,mMC3BDO,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCJ,EAAiB,mCAAG,sGACRG,EAAAA,GAAAA,IAAA,oCAAuCC,IAD/B,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,GAAAA,IAAA,iBACDK,EADC,oBACkBJ,IACjCK,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCACjB,IALuB,cACpBC,EADoB,yBAMnBA,EAAIP,MANe,2CAAH,sDAWZQ,EAAU,mCAAG,WAAML,GAAN,yFACDL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACgBJ,EADhB,oBADC,uBAChBC,EADgB,EAChBA,KADgB,kBAKjBA,EAAKS,MALY,2CAAH,sDAUVC,EAAU,mCAAG,WAAMP,GAAN,yFACDL,EAAAA,GAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IAD9C,uBAChBC,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAOVU,EAAe,mCAAG,WAAMC,GAAN,yFACNd,EAAAA,GAAAA,IAAA,gCACIC,EADJ,kBACiBa,EADjB,+CADM,uBACrBZ,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 15px 0;\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const TrendingMovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: #ab47bc;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TrendingMovieLink, List, ListItem } from './MovieList.styled';\n\nconst MovieList = ({ trending, loading }) => {\n  const location = useLocation();\n  return (\n    <>\n      {loading ? (\n        <div>Loading</div>\n      ) : (\n        <List>\n          {trending.map(({ id, title, name }) => (\n            <ListItem key={id}>\n              <TrendingMovieLink\n                to={`movies/${id}`}\n                state={{ from: location.pathname }}\n              >\n                {title || name}\n              </TrendingMovieLink>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trending: PropTypes.arrayOf(PropTypes.object),\n  loading: PropTypes.bool,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { getTrendingMovies } from 'services/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const trendingMovies = await getTrendingMovies();\n        setTrendingMovies(trendingMovies);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MovieList trending={trendingMovies} loading={isLoading} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'fb0f8889c4de169f6f8eba7a95a6c733';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n// search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["List","styled","ListItem","TrendingMovieLink","Link","trending","loading","location","useLocation","map","id","title","name","to","state","from","pathname","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","fetchData","getTrendingMovies","console","log","axios","KEY","data","results","getMovieById","movieId","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query"],"sourceRoot":""}