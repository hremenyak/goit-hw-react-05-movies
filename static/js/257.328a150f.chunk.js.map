{"version":3,"file":"static/js/257.328a150f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.section`\n  padding-top: 15px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding: 10px 0 10px 10px;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #ab47bc;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n`;\n\nexport const ExtraInfoSection = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ExtraInfoTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  width: 500px;\n  text-align: justify;\n`;\n\nexport const BackButton = styled.button`\n  border-radius: 6px;\n  padding: 7px 10px;\n  border: transparent;\n  outline: none;\n  margin-left: 10px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  background-color: #ab47bc;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    background-color: #773183;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { TiChevronLeft } from 'react-icons/ti';\nimport { getMovieById } from 'services/api';\nimport blankImage from '../../images/white_image.png';\nimport {\n  MovieCard,\n  InfoItem,\n  InfoLink,\n  Title,\n  Wrapper,\n  ImageWrapper,\n  ExtraInfoSection,\n  ListItem,\n  ExtraInfoTitle,\n  MovieInfo,\n  BackButton,\n} from './MovieDetails.styled';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieData = await getMovieById(movieId);\n        setMovie(movieData);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBackButton = () => {\n    navigate(location.state.from);\n  };\n  if (!movie) {\n    return;\n  }\n  const { genres, title, release_date, overview, vote_average, poster_path } =\n    movie;\n  const imageSRC = poster_path ? IMAGEURL + poster_path : blankImage;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <Wrapper>\n        {location.state?.from && (\n          <BackButton onClick={handleGoBackButton}>\n            <TiChevronLeft />\n            <span>Go back</span>\n          </BackButton>\n        )}\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <MovieCard>\n            <ImageWrapper>\n              <img src={`${imageSRC}`} alt={title} />\n            </ImageWrapper>\n            <MovieInfo>\n              <Title>\n                {title} {releaseDate && `(${releaseDate})`}\n              </Title>\n              <ul>\n                <InfoItem>\n                  {userScore > 0 && <p>User Score: {userScore}%</p>}\n                </InfoItem>\n                <InfoItem>\n                  <b>Overview</b>\n\n                  <p>{overview}</p>\n                </InfoItem>\n                <InfoItem>\n                  <b>Genres</b>\n\n                  <p>{movieGenres || ' - '}</p>\n                </InfoItem>\n              </ul>\n            </MovieInfo>\n          </MovieCard>\n        )}\n      </Wrapper>\n      <ExtraInfoSection>\n        <ExtraInfoTitle> Additional information</ExtraInfoTitle>\n        <div>\n          <ul>\n            <ListItem>\n              <InfoLink to=\"cast\" state={location.state}>\n                Cast\n              </InfoLink>\n            </ListItem>\n\n            <ListItem>\n              <InfoLink to=\"reviews\" state={location.state}>\n                {' '}\n                Reviews\n              </InfoLink>\n            </ListItem>\n          </ul>\n        </div>\n      </ExtraInfoSection>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'fb0f8889c4de169f6f8eba7a95a6c733';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n// search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["Wrapper","styled","MovieCard","InfoLink","Link","InfoItem","Title","ImageWrapper","ExtraInfoSection","ListItem","ExtraInfoTitle","MovieInfo","BackButton","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","useEffect","fetchData","getMovieById","movieData","console","log","genres","title","release_date","overview","vote_average","poster_path","imageSRC","blankImage","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","state","from","onClick","src","alt","to","Suspense","axios","KEY","getTrendingMovies","data","results","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query"],"sourceRoot":""}